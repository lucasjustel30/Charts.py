# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14Gz9xwJOWIKHNGh9FVXtpJzQ3RDvNtQR
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

x = [1,2,3,4,5,6]
y = [1,2,3,4,5,6]
y1 = [6,5,4,3,2,1]

plt.plot(x,y,color='red')
plt.plot(x,y1,color='blue')
plt.scatter(x,y,color='red')
plt.scatter(x,y1,color='blue')
plt.title('Demand x Supply', size='20', color='black')
plt.legend(['Supply','Demand'], shadow='TRUE',loc ='upper center', facecolor='yellow', prop = {'size' : 11})
plt.xlabel('Quantity', size='15',color='black')
plt.ylabel('Price',size='15',color='black')
plt.grid()

plt.show()

x = [1,2,3,4,5,6,7,8,9]
y = [1,1.1,1.3,1.8,3,4,5.5,8,11]

plt.subplot(1,2,1)
plt.plot(x,y,color='red')
plt.bar(x,y)

plt.subplot(1,2,2)
plt.plot(y,x,color='red')
plt.barh(x,y)


plt.grid()
plt.show()

x = [1,2,3,4,5,6,7,8]
y1 = [1,1.5,2,3,5,7,8,9]
y2 = [1,1.2,1.4,1.8,2,3,5,8]
y3 = [ (y1 + y2)/2 for y1,y2 in zip(y1,y2) ] 

plt.bar(x,y1,color='red')
plt.bar(x,y2,color='blue')
plt.plot(x,y3, color='yellow')
plt.grid()

plt.show()

"""ax.spines - usar top e bottom ao inv√©s de upper e lower*

Delimitar intervalos com:

a = np.linspace(1,10,7)

print(a)

b = np.arange(1,10,3)

print(b)
"""

x = np.linspace(-10,10,100)
y = 5*x + 10 

fig = plt.figure()
ax = fig.add_subplot(1, 1, 1)

ax.spines['left'].set_position('center')
ax.spines['bottom'].set_position('zero')

ax.spines['top'].set_color('none')
ax.spines['right'].set_color('none')

plt.ylim(-60,70)

plt.plot(x,y,color='red')
plt.show()

x = np.linspace(-10,10,100)
y = x**2

fig = plt.figure()
ax = fig.add_subplot(1, 1, 1)

plt.xlim(-5,5)
plt.ylim(0,10)

ax.spines['left'].set_position('center')
ax.spines['bottom'].set_position('zero')

ax.spines['top'].set_color('none')
ax.spines['right'].set_color('none')


plt.plot(x,y,color='red')
plt.show()

x = np.linspace(-10,10,100)
y = x**2

x1 = np.linspace(-10,10,100)
y1 = 4*x + 30 

fig = plt.figure()
ax = fig.add_subplot(1, 1, 1)

ax.spines['left'].set_position('center')
ax.spines['bottom'].set_position('zero')
ax.spines['top'].set_color('none')
ax.spines['right'].set_color('none')

plt.ylim(0,80)
plt.plot(x,y,color='red')
plt.plot(x1,y1,color='blue')
plt.show()

x = np.linspace(-10,10,100)
y = x*x*x

fig = plt.figure()
ax = fig.add_subplot(1, 1, 1)

ax.spines['left'].set_position('center')
ax.spines['bottom'].set_position('zero')
ax.spines['top'].set_color('none')
ax.spines['right'].set_color('none')

plt.plot(x,y, color='red')
plt.show()

plt.plot(x,np.sin(x),color='blue')
plt.plot(x,np.cos(x),color='red')

plt.xlim(-np.pi,np.pi)
plt.ylim(-1,1)

plt.legend(['sen(x)' , 'cos(x)'] , loc = 'upper left', fontsize='15')

plt.plot(x,y)
plt.show()

x = np.linspace(-np.pi,np.pi,100)

y = np.sin(x)
z = np.cos(x)

fig = plt.figure()
ax = fig.add_subplot(1, 1, 1)
ax.spines['left'].set_position('center')
ax.spines['bottom'].set_position('center')
ax.spines['right'].set_color('none')
ax.spines['top'].set_color('none')
ax.xaxis.set_ticks_position('bottom')
ax.yaxis.set_ticks_position('left')

plt.plot(x,y, 'c', label='y=sin(x)')
plt.plot(x,z, 'm', label='y=cos(x)')

plt.legend(loc='upper left')

plt.show()